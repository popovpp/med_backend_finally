"""New tables have been added!

Revision ID: 02897418f110
Revises: 9bf6f782b5c1
Create Date: 2023-11-16 18:08:51.109149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '02897418f110'
down_revision: Union[str, None] = '9bf6f782b5c1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('complex_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание комплексной услуги'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Комплексные услуги"'
    )
    op.create_index(op.f('ix_complex_services_id'), 'complex_services', ['id'], unique=False)
    op.create_table('services_mspecialities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('medical_speciality_id', sa.Integer(), nullable=False, comment='Идентификатор медицинской специальности'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['medical_speciality_id'], ['medical_specialities.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица-справочник "Услуги со специальностями"'
    )
    op.create_index(op.f('ix_services_mspecialities_id'), 'services_mspecialities', ['id'], unique=False)
    op.create_table('complex_services_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('complex_service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('price', sa.Float(), nullable=True, comment='Цена элемента комплексной услуги'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Количество входящей услуги'),
    sa.Column('coefficient_to_price', sa.Float(), nullable=True, comment='Цена элемента комплексной услуги'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['complex_service_id'], ['complex_services.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Элементы комплексных услуг"'
    )
    op.create_index(op.f('ix_complex_services_items_id'), 'complex_services_items', ['id'], unique=False)
    op.add_column('doctor_statuses_types', sa.Column('client_dstatus_type_id', sa.Integer(), nullable=True, comment='Идентификатор типа статуса в системе клиента'))
    op.drop_column('doctor_statuses_types', 'client_dcategory_id')
    op.add_column('services', sa.Column('name_for_staff', sa.String(length=200), nullable=False, comment='Наименование услуги для персонала'))
    op.add_column('services', sa.Column('name_for_mz', sa.String(length=200), nullable=False, comment='Наименование услуги для минздрава'))
    op.add_column('services', sa.Column('name_for_lk', sa.String(length=200), nullable=False, comment='Наименование услуги для личного кабинета'))
    op.add_column('services', sa.Column('full_description', sa.Text(), nullable=True, comment='Полное описание'))
    op.add_column('services', sa.Column('applied_method', sa.Text(), nullable=True, comment='Применяемый метод'))
    op.add_column('services', sa.Column('preparation_rules', sa.Text(), nullable=True, comment='Правила подготовки'))
    op.add_column('services', sa.Column('short_description', sa.String(length=500), nullable=True, comment='Короткое описание'))
    op.add_column('services', sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'))
    op.add_column('services', sa.Column('mz_code', sa.String(length=50), nullable=True, comment='Код минздрава'))
    op.add_column('services', sa.Column('execution_time', sa.Integer(), nullable=True, comment='Время выполнения в целых минутах'))
    op.add_column('services', sa.Column('nurses_execution_time', sa.Integer(), nullable=True, comment='Время выполнения младшим медицинским персоналом в целых минутах'))
    op.add_column('services', sa.Column('gender', sa.String(length=1), nullable=True, comment='Пол пользователя'))
    op.add_column('services', sa.Column('is_urgent', sa.Boolean(), nullable=True, comment='Флаг срочная/не срочная'))
    op.add_column('services', sa.Column('is_for_home_only', sa.Boolean(), nullable=True, comment='Флаг домашняя/недомашняя'))
    op.add_column('services', sa.Column('selected_service_notification', sa.Text(), nullable=True, comment='Текст уведомления при выбранной услуге'))
    op.add_column('services', sa.Column('is_complex_service', sa.Boolean(), nullable=True, comment='Флаг комплексная/некомплексная'))
    op.add_column('services', sa.Column('client_service_code', sa.String(length=100), nullable=True, comment='Буквенноцифровой код услуги в системе клиента'))
    op.alter_column('services', 'service_group_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment='Идентификатор группы прейскуранта',
               existing_comment='Идентификатор группы услуги')
    op.alter_column('services', 'minimal_age',
               existing_type=sa.INTEGER(),
               comment='Минимальный возраст пациента',
               existing_comment='Минимальный возрас оказания услуги',
               existing_nullable=False)
    op.alter_column('services', 'maximal_age',
               existing_type=sa.INTEGER(),
               comment='Максимальный возраст пациента',
               existing_comment='Максимальный возрас оказания услуги',
               existing_nullable=False)
    op.drop_column('services', 'name')
    op.drop_column('services', 'description')
    op.add_column('services_groups', sa.Column('client_service_group_id', sa.Integer(), nullable=True, comment='Идентификатор узла прейкуранта в системе клиента'))
    op.add_column('services_groups', sa.Column('view_name', sa.String(), nullable=True, comment='Отображаемое наименование узла прейскуранта'))
    op.add_column('services_groups', sa.Column('description', sa.Text(), nullable=True, comment='Описание узла прейскуранта'))
    op.add_column('services_groups', sa.Column('client_service_group_code', sa.String(length=100), nullable=True, comment='Код раздела прейскуранта для нужд администрирования'))
    op.add_column('services_groups', sa.Column('level_sorting_code', sa.Integer(), nullable=True, comment='Числовой код для произвольно сортировки узла в рамках уровня, в котором узел расположен'))
    op.add_column('services_groups', sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активный/не активный'))
    op.alter_column('services_groups', 'name',
               existing_type=sa.VARCHAR(),
               comment='Наименование узла прейскуранта',
               existing_nullable=False)
    op.alter_column('services_groups', 'path',
               existing_type=sa.VARCHAR(),
               comment='путь в дереве, начиная от корня вида "ud.id.id...id", где id идентификатор узла в таблице services_groups. Самая правая метка в path - это id самого узла. Перед ним - id родителя.',
               existing_nullable=False)
    op.create_table_comment(
        'services_groups',
        'Таблица-справочник "Прейскурант услуг". Содержит древовидную струтктуру',
        existing_comment=None,
        schema=None
    )
    op.drop_column('services_groups', 'webtext')
    op.add_column('services_types', sa.Column('client_service_type_id', sa.Integer(), nullable=True, comment='Идентификатор типа услуги на стороне клиента'))
    op.alter_column('services_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_comment='Наименование типа услуг',
               existing_nullable=False)
    op.drop_column('services_types', 'client_stype_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('services_types', sa.Column('client_stype_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Идентификатор типа услуги на стороне клиента'))
    op.alter_column('services_types', 'name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_comment='Наименование типа услуг',
               existing_nullable=False)
    op.drop_column('services_types', 'client_service_type_id')
    op.add_column('services_groups', sa.Column('webtext', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_table_comment(
        'services_groups',
        existing_comment='Таблица-справочник "Прейскурант услуг". Содержит древовидную струтктуру',
        schema=None
    )
    op.alter_column('services_groups', 'path',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='путь в дереве, начиная от корня вида "ud.id.id...id", где id идентификатор узла в таблице services_groups. Самая правая метка в path - это id самого узла. Перед ним - id родителя.',
               existing_nullable=False)
    op.alter_column('services_groups', 'name',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Наименование узла прейскуранта',
               existing_nullable=False)
    op.drop_column('services_groups', 'is_active')
    op.drop_column('services_groups', 'level_sorting_code')
    op.drop_column('services_groups', 'client_service_group_code')
    op.drop_column('services_groups', 'description')
    op.drop_column('services_groups', 'view_name')
    op.drop_column('services_groups', 'client_service_group_id')
    op.add_column('services', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='Описание услуги'))
    op.add_column('services', sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Наименование услуги'))
    op.alter_column('services', 'maximal_age',
               existing_type=sa.INTEGER(),
               comment='Максимальный возрас оказания услуги',
               existing_comment='Максимальный возраст пациента',
               existing_nullable=False)
    op.alter_column('services', 'minimal_age',
               existing_type=sa.INTEGER(),
               comment='Минимальный возрас оказания услуги',
               existing_comment='Минимальный возраст пациента',
               existing_nullable=False)
    op.alter_column('services', 'service_group_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment='Идентификатор группы услуги',
               existing_comment='Идентификатор группы прейскуранта')
    op.drop_column('services', 'client_service_code')
    op.drop_column('services', 'is_complex_service')
    op.drop_column('services', 'selected_service_notification')
    op.drop_column('services', 'is_for_home_only')
    op.drop_column('services', 'is_urgent')
    op.drop_column('services', 'gender')
    op.drop_column('services', 'nurses_execution_time')
    op.drop_column('services', 'execution_time')
    op.drop_column('services', 'mz_code')
    op.drop_column('services', 'comment')
    op.drop_column('services', 'short_description')
    op.drop_column('services', 'preparation_rules')
    op.drop_column('services', 'applied_method')
    op.drop_column('services', 'full_description')
    op.drop_column('services', 'name_for_lk')
    op.drop_column('services', 'name_for_mz')
    op.drop_column('services', 'name_for_staff')
    op.add_column('doctor_statuses_types', sa.Column('client_dcategory_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Идентификатор типа статуса в системе клиента'))
    op.drop_column('doctor_statuses_types', 'client_dstatus_type_id')
    op.drop_index(op.f('ix_complex_services_items_id'), table_name='complex_services_items')
    op.drop_table('complex_services_items')
    op.drop_index(op.f('ix_services_mspecialities_id'), table_name='services_mspecialities')
    op.drop_table('services_mspecialities')
    op.drop_index(op.f('ix_complex_services_id'), table_name='complex_services')
    op.drop_table('complex_services')
    # ### end Alembic commands ###
