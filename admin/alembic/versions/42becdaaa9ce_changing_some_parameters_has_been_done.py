"""Changing some parameters has been done!

Revision ID: 42becdaaa9ce
Revises: 1bebd620d44a
Create Date: 2023-12-05 19:52:39.450318

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '42becdaaa9ce'
down_revision: Union[str, None] = '1bebd620d44a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('access_tickets', 'doctor_mcenters_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='Идентификатор доктора номерка')
    op.alter_column('access_tickets', 'expire_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='Дата истечения номерка')
    op.create_unique_constraint(None, 'payments_types', ['name'])
    op.alter_column('prices', 'price_period_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='Идентификатор периода действия прайса')
    op.create_unique_constraint(None, 'prices_names', ['name'])
    op.alter_column('users_payments', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False,
               existing_comment='Сумма платежа')
    op.alter_column('users_purchases', 'service_quantity',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='Количество таких услуг')
    op.alter_column('users_purchases_returns', 'sum',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False,
               existing_comment='Сумма платежа')
    op.alter_column('users_services_carts', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='Дата и время начала выполнения услуги')
    op.alter_column('users_services_carts', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='Дата и время окончания выполнения услуги')
    op.alter_column('users_services_carts', 'refuse_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='Дата отказа от выполнения услуги')
    op.alter_column('users_services_plans', 'refuse_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='Дата отказа от выполнения услуги')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users_services_plans', 'refuse_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='Дата отказа от выполнения услуги')
    op.alter_column('users_services_carts', 'refuse_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='Дата отказа от выполнения услуги')
    op.alter_column('users_services_carts', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='Дата и время окончания выполнения услуги')
    op.alter_column('users_services_carts', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='Дата и время начала выполнения услуги')
    op.alter_column('users_purchases_returns', 'sum',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True,
               existing_comment='Сумма платежа')
    op.alter_column('users_purchases', 'service_quantity',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='Количество таких услуг')
    op.alter_column('users_payments', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True,
               existing_comment='Сумма платежа')
    op.drop_constraint(None, 'prices_names', type_='unique')
    op.alter_column('prices', 'price_period_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='Идентификатор периода действия прайса')
    op.drop_constraint(None, 'payments_types', type_='unique')
    op.alter_column('access_tickets', 'expire_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='Дата истечения номерка')
    op.alter_column('access_tickets', 'doctor_mcenters_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='Идентификатор доктора номерка')
    # ### end Alembic commands ###
