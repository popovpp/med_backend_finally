"""Added new tables

Revision ID: fd0fe77f5c45
Revises: 99f7e8908d02
Create Date: 2023-11-20 16:51:52.676945

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fd0fe77f5c45'
down_revision: Union[str, None] = '99f7e8908d02'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('financial_types',
    sa.Column('client_shifr_id', sa.Integer(), nullable=False, comment='Идентификатор финансового типа в системе клиента'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование финансового типа'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    comment='Таблица "Финансовые типы"'
    )
    op.create_index(op.f('ix_financial_types_id'), 'financial_types', ['id'], unique=False)
    op.create_table('packs_types',
    sa.Column('client_pack_type_id', sa.Integer(), nullable=False, comment='Идентификатор типа пакета в системе клиента'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Типы пакетов"'
    )
    op.create_index(op.f('ix_packs_types_id'), 'packs_types', ['id'], unique=False)
    op.create_table('shifrs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_shifr_id', sa.Integer(), nullable=False, comment='Идентификатор шифра в системе клиента'),
    sa.Column('code', sa.String(length=100), nullable=True, comment='Буквенноцифровой код Шифра в системе клиента'),
    sa.Column('name', sa.String(length=200), nullable=True, comment='Наименование шифра в системе клиента'),
    sa.Column('company_name', sa.String(length=200), nullable=True, comment='Наименование компании в системе клиента'),
    sa.Column('start_date', sa.DateTime(), nullable=False, comment='Начальная дата периода действия шифра'),
    sa.Column('end_date', sa.DateTime(), nullable=False, comment='Конечная дата периода действия шифра'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Статус шифра'),
    sa.Column('financial_type_id', sa.Integer(), nullable=False, comment='Идентификатор финансового типа шифра'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['financial_type_id'], ['financial_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Шифры"'
    )
    op.create_index(op.f('ix_shifrs_id'), 'shifrs', ['id'], unique=False)
    op.create_table('doctors_replacements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_doctor_replacement_id', sa.Integer(), nullable=False, comment='Идентификатор записи подмены в системе клиента'),
    sa.Column('doctor_id', sa.Integer(), nullable=False, comment='Идентификатор подменяющего доктора'),
    sa.Column('start_date', sa.DateTime(), nullable=False, comment='Начальная дата периода подмены'),
    sa.Column('end_date', sa.DateTime(), nullable=False, comment='Конечная дата периода подмены'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Подмены докторов на абонементах"'
    )
    op.create_index(op.f('ix_doctors_replacements_id'), 'doctors_replacements', ['id'], unique=False)
    op.create_table('polices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_police_id', sa.Integer(), nullable=False, comment='Идентификатор полиса в системе клиента'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('shifr_id', sa.Integer(), nullable=False, comment='Идентификатор шифра'),
    sa.Column('start_date', sa.DateTime(), nullable=False, comment='Начальная дата периода действия полиса'),
    sa.Column('end_date', sa.DateTime(), nullable=False, comment='Конечная дата периода действия полиса'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Статус полиса'),
    sa.Column('series', sa.String(length=50), nullable=True, comment='Серия полиса'),
    sa.Column('number', sa.String(length=100), nullable=True, comment='Номер полиса'),
    sa.Column('contract_date', sa.DateTime(), nullable=False, comment='Дата выдачи полиса'),
    sa.Column('price', sa.Float(), nullable=True, comment='Цена полиса'),
    sa.Column('discount', sa.Float(), nullable=True, comment='Скидка на полис'),
    sa.Column('discoumt_coefficient', sa.Float(), nullable=True, comment='Коэффициент на скидку'),
    sa.Column('amount', sa.Float(), nullable=True, comment='Итоговая стоимость полиса'),
    sa.Column('current_paid', sa.Float(), nullable=True, comment='Текущая оплаченная сумма'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['shifr_id'], ['shifrs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Полисы"'
    )
    op.create_index(op.f('ix_polices_id'), 'polices', ['id'], unique=False)
    op.create_table('users_subscribes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_subscribe_id', sa.Integer(), nullable=False, comment='Идентификатор абонемента пользователя в системе клиента'),
    sa.Column('police_id', sa.Integer(), nullable=False, comment='Идентификатор полиса'),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.ForeignKeyConstraint(['police_id'], ['polices.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Абонементы пользователя"'
    )
    op.create_index(op.f('ix_users_subscribes_id'), 'users_subscribes', ['id'], unique=False)
    op.create_table('subscribes_doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_suscribe_doctor_id', sa.Integer(), nullable=False, comment='Идентификатор доктра на абонементе в системе клиента'),
    sa.Column('user_subscribe_id', sa.Integer(), nullable=False, comment='Идентификатор абонемента пользователя'),
    sa.Column('doctor_id', sa.Integer(), nullable=False, comment='Идентификатор доктора'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('start_date', sa.DateTime(), nullable=False, comment='Начальная дата периода задействования доктора'),
    sa.Column('end_date', sa.DateTime(), nullable=False, comment='Конечная дата периода Задействования доктора'),
    sa.Column('role_id', sa.Integer(), nullable=True, comment='Идентификатор роли доктора'),
    sa.Column('doctor_replacement_id', sa.Integer(), nullable=True, comment='Идентификатор записи о подмене доктора'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['doctor_replacement_id'], ['doctors_replacements.id'], ),
    sa.ForeignKeyConstraint(['user_subscribe_id'], ['users_subscribes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Врачи абонементов пользователей"'
    )
    op.create_index(op.f('ix_subscribes_doctors_id'), 'subscribes_doctors', ['id'], unique=False)
    op.create_table('subscribes_services_packs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_subscribe_service_pack_id', sa.Integer(), nullable=False, comment='Идентификатор групп услуг аьонементов в системе клиента'),
    sa.Column('user_subscribe_id', sa.Integer(), nullable=False, comment='Идентификатор абонемента пользователя'),
    sa.Column('code', sa.String(length=50), nullable=True, comment='Код пакета для нужд клиента'),
    sa.Column('pack_type_id', sa.Integer(), nullable=False, comment='Идентификатор типа пакета услуг абонементов (на  дому или в МЦ)'),
    sa.Column('pack_tag', sa.Integer(), nullable=True, comment='тэг пакета: 1 - услуга, 2 - группа прейскуранта'),
    sa.Column('min_quantity', sa.Integer(), nullable=True, comment='Минимальное количество'),
    sa.Column('max_quantity', sa.Integer(), nullable=True, comment='Максимальное количество'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.ForeignKeyConstraint(['pack_type_id'], ['packs_types.id'], ),
    sa.ForeignKeyConstraint(['user_subscribe_id'], ['users_subscribes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Пакеты услуг абонементов"'
    )
    op.create_index(op.f('ix_subscribes_services_packs_id'), 'subscribes_services_packs', ['id'], unique=False)
    op.create_table('subscribes_spacks_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_subscribes_spacks_records_id', sa.Integer(), nullable=False, comment='Идентификатор записи пакета услуги абонемента в системе клиента'),
    sa.Column('subscribe_services_pack_id', sa.Integer(), nullable=False, comment='Идентификатор пакеты услуг абонемента'),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('service_group_id', sa.Integer(), nullable=False, comment='Идентификатор группы прейскуранта'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='Разрешенное количество услуг'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Статус'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.ForeignKeyConstraint(['service_group_id'], ['services_groups.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['subscribe_services_pack_id'], ['subscribes_services_packs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Элементы пакетов услуг абонементов"'
    )
    op.create_index(op.f('ix_subscribes_spacks_records_id'), 'subscribes_spacks_records', ['id'], unique=False)
    op.alter_column('doctors_patients_types', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               comment='Начальная дата периода действия разрешения работать с данным типом пациента',
               existing_comment='Начальная дата периода действия разрешения работать с данным питом пациента',
               existing_nullable=False)
    op.alter_column('doctors_patients_types', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               comment='Конечная дата периода действия разрешения работать с данным типом пациента',
               existing_comment='Конечная дата периода действия разрешения работать с данным питом пациента',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('doctors_patients_types', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               comment='Конечная дата периода действия разрешения работать с данным питом пациента',
               existing_comment='Конечная дата периода действия разрешения работать с данным типом пациента',
               existing_nullable=False)
    op.alter_column('doctors_patients_types', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               comment='Начальная дата периода действия разрешения работать с данным питом пациента',
               existing_comment='Начальная дата периода действия разрешения работать с данным типом пациента',
               existing_nullable=False)
    op.drop_index(op.f('ix_subscribes_spacks_records_id'), table_name='subscribes_spacks_records')
    op.drop_table('subscribes_spacks_records')
    op.drop_index(op.f('ix_subscribes_services_packs_id'), table_name='subscribes_services_packs')
    op.drop_table('subscribes_services_packs')
    op.drop_index(op.f('ix_subscribes_doctors_id'), table_name='subscribes_doctors')
    op.drop_table('subscribes_doctors')
    op.drop_index(op.f('ix_users_subscribes_id'), table_name='users_subscribes')
    op.drop_table('users_subscribes')
    op.drop_index(op.f('ix_polices_id'), table_name='polices')
    op.drop_table('polices')
    op.drop_index(op.f('ix_doctors_replacements_id'), table_name='doctors_replacements')
    op.drop_table('doctors_replacements')
    op.drop_index(op.f('ix_shifrs_id'), table_name='shifrs')
    op.drop_table('shifrs')
    op.drop_index(op.f('ix_packs_types_id'), table_name='packs_types')
    op.drop_table('packs_types')
    op.drop_index(op.f('ix_financial_types_id'), table_name='financial_types')
    op.drop_table('financial_types')
    # ### end Alembic commands ###
