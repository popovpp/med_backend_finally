"""Many new tables have been added!

Revision ID: 1bebd620d44a
Revises: 80a34ab3dd56
Create Date: 2023-12-05 19:40:05.250189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '1bebd620d44a'
down_revision: Union[str, None] = '80a34ab3dd56'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор типа платежа в системе клиента'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Типы платежей"'
    )
    op.create_index(op.f('ix_payments_types_id'), 'payments_types', ['id'], unique=False)
    op.create_table('prices_names',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор имени прайса в системе клиента'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Наименвоания прайсов"'
    )
    op.create_index(op.f('ix_prices_names_id'), 'prices_names', ['id'], unique=False)
    op.create_table('prices_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор периода действия в системе клиента'),
    sa.Column('start_date', sa.DateTime(), nullable=False, comment='Начальная дата периода'),
    sa.Column('end_date', sa.DateTime(), nullable=False, comment='Конечная дата периода'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Периоды действия прайсов"'
    )
    op.create_index(op.f('ix_prices_periods_id'), 'prices_periods', ['id'], unique=False)
    op.create_table('refuses_reasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор причины отказа в системе клиента'),
    sa.Column('text', sa.String(length=4000), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Причины отказов"'
    )
    op.create_index(op.f('ix_refuses_reasons_id'), 'refuses_reasons', ['id'], unique=False)
    op.create_table('prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор прайса в системе клиента'),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('price_period_id', sa.Integer(), nullable=False, comment='Идентификатор периода действия прайса'),
    sa.Column('price_name_id', sa.Integer(), nullable=False, comment='Идентификатор периода наименования прайса'),
    sa.Column('price_beznal', sa.Float(), nullable=True, comment='Цена безнал'),
    sa.Column('price_nal', sa.Float(), nullable=True, comment='Цена нал'),
    sa.ForeignKeyConstraint(['price_name_id'], ['prices_names.id'], ),
    sa.ForeignKeyConstraint(['price_period_id'], ['prices_periods.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Прайсы"'
    )
    op.create_index(op.f('ix_prices_id'), 'prices', ['id'], unique=False)
    op.create_table('access_tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор номерка в системе клиента'),
    sa.Column('doctor_mcenters_id', sa.Integer(), nullable=True, comment='Идентификатор доктора номерка'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('ticket_datetime', sa.DateTime(), nullable=False, comment='Дата номерка'),
    sa.Column('ticket_duration', sa.Integer(), nullable=True, comment='Длительность услуги в минутах'),
    sa.Column('ticket_room', sa.String(length=5), nullable=True, comment='Кабинет номерка'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='Статус номерка'),
    sa.Column('firststatus', sa.Boolean(), nullable=True, comment='Первый статус номерка'),
    sa.Column('bl_status', sa.Integer(), nullable=True, comment='Длительность услуги в минутах'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.Column('is_reserv', sa.Boolean(), nullable=True, comment='Флаг в резерве/не в резерве'),
    sa.Column('expire_date', sa.DateTime(), nullable=False, comment='Дата истечения номерка'),
    sa.Column('from_internet_status', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.ForeignKeyConstraint(['doctor_mcenters_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Номерки"'
    )
    op.create_index(op.f('ix_access_tickets_id'), 'access_tickets', ['id'], unique=False)
    op.create_table('users_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор платежа пользователя в системе клиента'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('policy_id', sa.Integer(), nullable=True, comment='Идентификатор полиса'),
    sa.Column('shifr_id', sa.Integer(), nullable=True, comment='Идентификатор шифра'),
    sa.Column('payment_type_id', sa.Integer(), nullable=True, comment='Тип платежа'),
    sa.Column('linked_user_payment_id', sa.Integer(), nullable=True, comment='Идентификатор пользователя'),
    sa.Column('avance_status', sa.Integer(), nullable=True, comment='Статус аванса'),
    sa.Column('payment_date', sa.DateTime(), nullable=False, comment='Дата платежа'),
    sa.Column('payment_status', sa.Integer(), nullable=True, comment='Статус платежа'),
    sa.Column('amount', sa.Float(), nullable=True, comment='Сумма платежа'),
    sa.Column('full_amount', sa.Float(), nullable=True, comment='Полная сумма платежа'),
    sa.Column('discount_amount', sa.Float(), nullable=True, comment='Сумма дисконта'),
    sa.Column('used_amount', sa.Float(), nullable=True, comment='Использованная сумма'),
    sa.Column('avance_amount', sa.Float(), nullable=True, comment='Сумма аванса'),
    sa.Column('card_amount', sa.Float(), nullable=True, comment='Сумма по карточке'),
    sa.Column('sbp_amount', sa.Float(), nullable=True, comment='Сумма через СБП'),
    sa.Column('debt_amount', sa.Float(), nullable=True, comment='Сумма задолженности'),
    sa.Column('edit_now_status', sa.Boolean(), nullable=True, comment='Статус текущего редактирования'),
    sa.Column('lpu_id', sa.Integer(), nullable=True, comment='Идентификатор lpu'),
    sa.Column('cashier_id', sa.Integer(), nullable=True, comment='Идентификатор кассираг'),
    sa.Column('transaction_code', sa.String(length=200), nullable=True, comment='Код транзакции от платежной системы'),
    sa.ForeignKeyConstraint(['linked_user_payment_id'], ['users_payments.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payments_types.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], ),
    sa.ForeignKeyConstraint(['shifr_id'], ['shifrs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Платежи пользователей"'
    )
    op.create_index(op.f('ix_users_payments_id'), 'users_payments', ['id'], unique=False)
    op.create_table('users_purchases_returns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор возврата покупки пользователя в системе клиента'),
    sa.Column('user_purchase_id', sa.Integer(), nullable=False, comment='Идентификатор покупки пользователя'),
    sa.Column('user_payments_id', sa.Integer(), nullable=False, comment='Идентификатор платежа пользовтеля'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='Количество отменяемых услуг'),
    sa.Column('sum', sa.Float(), nullable=True, comment='Сумма платежа'),
    sa.Column('sum_card', sa.Float(), nullable=True, comment='Сумма платежа по карте'),
    sa.Column('sum_sbp', sa.Float(), nullable=True, comment='Сумма платежа через СБП'),
    sa.Column('sum_avance', sa.Float(), nullable=True, comment='Сумма аванса'),
    sa.ForeignKeyConstraint(['user_payments_id'], ['users_payments.id'], ),
    sa.ForeignKeyConstraint(['user_purchase_id'], ['users_purchases.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Возвраты покупок пользователя"'
    )
    op.create_index(op.f('ix_users_purchases_returns_id'), 'users_purchases_returns', ['id'], unique=False)
    op.create_table('users_services_carts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор записи в корзине в системе клиента'),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('policy_id', sa.Integer(), nullable=True, comment='Идентификатор полиса'),
    sa.Column('medical_center_id', sa.Integer(), nullable=False, comment='Идентификатор медицинского центра'),
    sa.Column('doctor_id', sa.Integer(), nullable=True, comment='Идентификатор доктора, выбранного в услуге'),
    sa.Column('doctor_exec_id', sa.Integer(), nullable=True, comment='Идентификатор доктора, выполнявшего услугу'),
    sa.Column('doctor_send_id', sa.Integer(), nullable=True, comment='Идентификатор доктора, назначившего услугу'),
    sa.Column('doctor_nurse_id', sa.Integer(), nullable=True, comment='Идентификатор медсестры, выполнявшей услугу'),
    sa.Column('doctor_paramedic_id', sa.Integer(), nullable=True, comment='Идентификатор доктора - парамедика, выполнявшего услугу'),
    sa.Column('start_date', sa.DateTime(), nullable=False, comment='Дата и время начала выполнения услуги'),
    sa.Column('end_date', sa.DateTime(), nullable=False, comment='Дата и время окончания выполнения услуги'),
    sa.Column('complex_service_id', sa.Integer(), nullable=True, comment='Идентификатор комплексной услуги'),
    sa.Column('complex_service_status', sa.Integer(), nullable=True, comment='Статус комплексной услуги: ставится 1 если услуга комплексная (верхний уровень), для услуги нижнего уровня ставится 0'),
    sa.Column('service_status', sa.Integer(), nullable=True, comment='Статус услуги: 0 / 3 - назначена, 1 - выполнена, 2 - отменена'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='Количество услуг'),
    sa.Column('stac_satus', sa.Boolean(), nullable=True, comment='Флаг стационарная да\\нет'),
    sa.Column('cito_status', sa.Boolean(), nullable=True, comment='Флаг срочная да\\нет'),
    sa.Column('refuse_date', sa.DateTime(), nullable=False, comment='Дата отказа от выполнения услуги'),
    sa.Column('refuse_reason_id', sa.Integer(), nullable=True, comment='Идентификатор причины отказа'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('discount', sa.Float(), nullable=True, comment='Скидка'),
    sa.Column('discount_coefficient', sa.Float(), nullable=True, comment='Коэффициент на скидку'),
    sa.Column('user_purchase_id', sa.Integer(), nullable=True, comment='Идентификатор покупки пользователя'),
    sa.ForeignKeyConstraint(['complex_service_id'], ['complex_services.id'], ),
    sa.ForeignKeyConstraint(['doctor_exec_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['doctor_nurse_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['doctor_paramedic_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['doctor_send_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['medical_center_id'], ['medical_centers.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], ),
    sa.ForeignKeyConstraint(['refuse_reason_id'], ['refuses_reasons.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_purchase_id'], ['users_purchases.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Корзины пользователей"'
    )
    op.create_index(op.f('ix_users_services_carts_id'), 'users_services_carts', ['id'], unique=False)
    op.create_table('users_services_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='Идентификатор запланированной услуги в системе клиента'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('service_id', sa.Integer(), nullable=False, comment='Идентификатор услуги'),
    sa.Column('policy_id', sa.Integer(), nullable=True, comment='Идентификатор полиса'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='Количество услуги'),
    sa.Column('plan_date', sa.DateTime(), nullable=False, comment='Плановая дата выполнения услуги'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('doctor_send_id', sa.Integer(), nullable=True, comment='Идентификатор доктора, назначившего услугу'),
    sa.Column('medical_center_id', sa.Integer(), nullable=False, comment='Идентификатор медицинского центра'),
    sa.Column('status', sa.Integer(), nullable=True, comment='Статус запланированной услуги'),
    sa.Column('refuse_reason_id', sa.Integer(), nullable=True, comment='Идентификатор причины отказа'),
    sa.Column('refuse_date', sa.DateTime(), nullable=False, comment='Дата отказа от выполнения услуги'),
    sa.Column('user_service_cart_id', sa.Integer(), nullable=True, comment='Идентификатор услуги в корзине'),
    sa.ForeignKeyConstraint(['doctor_send_id'], ['doctors_medical_centers.id'], ),
    sa.ForeignKeyConstraint(['medical_center_id'], ['medical_centers.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], ),
    sa.ForeignKeyConstraint(['refuse_reason_id'], ['refuses_reasons.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_service_cart_id'], ['users_services_carts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Запланированные услуги пользователей"'
    )
    op.create_index(op.f('ix_users_services_plans_id'), 'users_services_plans', ['id'], unique=False)
    op.add_column('shifrs_discounts_periods', sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активна/не активна'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('shifrs_discounts_periods', 'is_active')
    op.drop_index(op.f('ix_users_services_plans_id'), table_name='users_services_plans')
    op.drop_table('users_services_plans')
    op.drop_index(op.f('ix_users_services_carts_id'), table_name='users_services_carts')
    op.drop_table('users_services_carts')
    op.drop_index(op.f('ix_users_purchases_returns_id'), table_name='users_purchases_returns')
    op.drop_table('users_purchases_returns')
    op.drop_index(op.f('ix_users_payments_id'), table_name='users_payments')
    op.drop_table('users_payments')
    op.drop_index(op.f('ix_access_tickets_id'), table_name='access_tickets')
    op.drop_table('access_tickets')
    op.drop_index(op.f('ix_prices_id'), table_name='prices')
    op.drop_table('prices')
    op.drop_index(op.f('ix_refuses_reasons_id'), table_name='refuses_reasons')
    op.drop_table('refuses_reasons')
    op.drop_index(op.f('ix_prices_periods_id'), table_name='prices_periods')
    op.drop_table('prices_periods')
    op.drop_index(op.f('ix_prices_names_id'), table_name='prices_names')
    op.drop_table('prices_names')
    op.drop_index(op.f('ix_payments_types_id'), table_name='payments_types')
    op.drop_table('payments_types')
    # ### end Alembic commands ###
