"""New users tables have been added!

Revision ID: b107c66d8a08
Revises: df96808e55af
Create Date: 2023-12-01 15:07:10.915345

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b107c66d8a08'
down_revision: Union[str, None] = 'df96808e55af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('information_ways',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_information_way_id', sa.Integer(), nullable=True, comment='Идентификатор канала поступления информации в системе клиента'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Каналы поступления информации"'
    )
    op.create_index(op.f('ix_information_ways_id'), 'information_ways', ['id'], unique=False)
    op.create_table('notifications_ways',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_information_way_id', sa.Integer(), nullable=True, comment='Идентификатор канала рассылки уведомлений в системе клиента'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Флаг активно/неактивно'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Каналы рассылки уведомлений"'
    )
    op.create_index(op.f('ix_notifications_ways_id'), 'notifications_ways', ['id'], unique=False)
    op.create_table('relationship_degreeses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_relationship_degrees_id', sa.Integer(), nullable=True, comment='Идентификатор степени родства в системе клиента'),
    sa.Column('name', sa.String(length=10), nullable=False, comment='Наименование степени родства: отец, мать, сын, дочь, опекун, подопечный, другой'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Степени родства"'
    )
    op.create_index(op.f('ix_relationship_degreeses_id'), 'relationship_degreeses', ['id'], unique=False)
    op.create_table('users_notifications_ways',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_information_way_id', sa.Integer(), nullable=True, comment='Идентификатор канала рассылки уведомлений в системе клиента'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('notification_way_id', sa.Integer(), nullable=False, comment='Идентификатор канал рассылки уведомлений пользователю'),
    sa.ForeignKeyConstraint(['notification_way_id'], ['notifications_ways.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Каналы рассылки уведомлений пользователей"'
    )
    op.create_index(op.f('ix_users_notifications_ways_id'), 'users_notifications_ways', ['id'], unique=False)
    op.create_table('users_relatives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('relative_id', sa.Integer(), nullable=False, comment='Идентификатор родственника пользователя'),
    sa.Column('relationship_degree_id', sa.Integer(), nullable=False, comment='Идентификатор родственника пользователя'),
    sa.Column('extra_rights', sa.Boolean(), nullable=True, comment='Флаг - дополнительные права - это права на просмотр результатов лечения - есть/нет'),
    sa.Column('block_status', sa.Boolean(), nullable=True, comment='Флаг - статус блокировки, если пользователь отказывается предоставлять доступ к своему аккаунту родственнику,- вкл/выкл'),
    sa.ForeignKeyConstraint(['relationship_degree_id'], ['relationship_degreeses.id'], ),
    sa.ForeignKeyConstraint(['relative_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица "Родственники пользователя"'
    )
    op.create_index(op.f('ix_users_relatives_id'), 'users_relatives', ['id'], unique=False)
    op.add_column('users', sa.Column('doc_type', sa.Integer(), nullable=True, comment='Тип документа, удостоверяющего личность'))
    op.add_column('users', sa.Column('doc_series', sa.String(length=50), nullable=True, comment='Серия документа, удостоверяющего личность)'))
    op.add_column('users', sa.Column('doc_number', sa.String(length=50), nullable=True, comment='Номер документа, удостоверяющего личность)'))
    op.add_column('users', sa.Column('doc_giving_dep_name', sa.String(length=200), nullable=True, comment='Наименование департамента, выдавшего документ)'))
    op.add_column('users', sa.Column('doc_giving_dep_code', sa.String(length=50), nullable=True, comment='Код департамента, выдавшего документ)'))
    op.add_column('users', sa.Column('doc_date', sa.DateTime(), nullable=True, comment='Дата выдачи документа'))
    op.add_column('users', sa.Column('doc_reg_address', sa.String(length=500), nullable=True, comment='Адрес регистрации, указанный в документе)'))
    op.add_column('users', sa.Column('snils', sa.String(length=20), nullable=True, comment='СНИЛС)'))
    op.add_column('users', sa.Column('inn', sa.String(length=20), nullable=True, comment='ИНН)'))
    op.add_column('users', sa.Column('city_id', sa.Integer(), nullable=True, comment='Идентификатор города'))
    op.add_column('users', sa.Column('address_full', sa.String(length=1000), nullable=True, comment='Полный адрес'))
    op.add_column('users', sa.Column('client_address_mis_kladr_id', sa.Integer(), nullable=True, comment='Идентификатор адреса пользователя в системе клиента'))
    op.add_column('users', sa.Column('longitude', sa.Float(), nullable=True, comment='Долгота в градусах'))
    op.add_column('users', sa.Column('latitude', sa.Float(), nullable=True, comment='Широта в градусах'))
    op.add_column('users', sa.Column('zone_number', sa.Integer(), nullable=True, comment='Номер зоны'))
    op.add_column('users', sa.Column('default_medical_center_id', sa.Integer(), nullable=False, comment='Идентификатор медицинского центра, выбранного по умолчанию'))
    op.add_column('users', sa.Column('login_phone_number', sa.String(length=25), nullable=False, comment='Номер телефона пользователя, используемый в качестве логина'))
    op.add_column('users', sa.Column('info_way_id', sa.Integer(), nullable=False, comment='Канал поступления к пользователю информации о клинике'))
    op.add_column('users', sa.Column('notification_time', sa.Time(), nullable=True, comment='Предпочтительное время информирования'))
    op.add_column('users', sa.Column('pref_notification_contact_id', sa.Integer(), nullable=False, comment='Идентификатор пользователя, контакт которого будет использован при информировании'))
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=500),
               existing_comment='Пароль для авторизации',
               existing_nullable=True)
    op.create_unique_constraint(None, 'users', ['login_phone_number'])
    op.create_foreign_key(None, 'users', 'users', ['pref_notification_contact_id'], ['id'])
    op.create_foreign_key(None, 'users', 'information_ways', ['info_way_id'], ['id'])
    op.create_foreign_key(None, 'users', 'medical_centers', ['default_medical_center_id'], ['id'])
    op.create_foreign_key(None, 'users', 'cities', ['city_id'], ['id'])
    op.drop_column('users', 'client_user_id')
    op.drop_column('users', 'last_visit')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'client_personal_area_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('client_personal_area_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Идентификатор личного кабинета в системе клиента'))
    op.add_column('users', sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Дата последнего входа пользователя в систему'))
    op.add_column('users', sa.Column('last_visit', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Дата последнего визита пользователя в медцентр'))
    op.add_column('users', sa.Column('client_user_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Идентификатор пользователя в системе клиента'))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'password',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=200),
               existing_comment='Пароль для авторизации',
               existing_nullable=True)
    op.drop_column('users', 'pref_notification_contact_id')
    op.drop_column('users', 'notification_time')
    op.drop_column('users', 'info_way_id')
    op.drop_column('users', 'login_phone_number')
    op.drop_column('users', 'default_medical_center_id')
    op.drop_column('users', 'zone_number')
    op.drop_column('users', 'latitude')
    op.drop_column('users', 'longitude')
    op.drop_column('users', 'client_address_mis_kladr_id')
    op.drop_column('users', 'address_full')
    op.drop_column('users', 'city_id')
    op.drop_column('users', 'inn')
    op.drop_column('users', 'snils')
    op.drop_column('users', 'doc_reg_address')
    op.drop_column('users', 'doc_date')
    op.drop_column('users', 'doc_giving_dep_code')
    op.drop_column('users', 'doc_giving_dep_name')
    op.drop_column('users', 'doc_number')
    op.drop_column('users', 'doc_series')
    op.drop_column('users', 'doc_type')
    op.drop_index(op.f('ix_users_relatives_id'), table_name='users_relatives')
    op.drop_table('users_relatives')
    op.drop_index(op.f('ix_users_notifications_ways_id'), table_name='users_notifications_ways')
    op.drop_table('users_notifications_ways')
    op.drop_index(op.f('ix_relationship_degreeses_id'), table_name='relationship_degreeses')
    op.drop_table('relationship_degreeses')
    op.drop_index(op.f('ix_notifications_ways_id'), table_name='notifications_ways')
    op.drop_table('notifications_ways')
    op.drop_index(op.f('ix_information_ways_id'), table_name='information_ways')
    op.drop_table('information_ways')
    # ### end Alembic commands ###
